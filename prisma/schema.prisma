// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

enum StatusVisibility {
  public
  unlisted
  private
  direct
}

model MastodonInstance {
  id                String   @id @default(uuid())
  urlEncoded        String   @unique
  url               String   @unique
  applicationId     String
  applicationSecret String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  users             User[]
}

model User {
  id                  String           @id @default(uuid())
  createdAt           DateTime         @default(now())
  updatedAt           DateTime         @updatedAt
  lastTootTime        DateTime         @default(now())
  name                String
  mastodonInstance    MastodonInstance @relation(fields: [mastodonInstanceId], references: [id])
  mastodonUid         String
  mastodonToken       String
  blueskyToken        String?
  blueskyHandle       String?
  blueskySession      Json?
  blueskySessionEvent String?
  mastodonInstanceId  String
  UserSettings        UserSettings[]
  Repost              Repost[]
  blueskySessionOauth BlueskySession?
  legacyAuth          Boolean          @default(true)
}

model Repost {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  tootId      String
  bsRootUri   String
  bsRootCid   String
  bsParentUri String
  bsParentCid String
}

model UserSettings {
  id               String           @id @default(uuid())
  statusVisibility StatusVisibility @default(public)
  excludeReplies   Boolean          @default(false)
  excludeReblogs   Boolean          @default(false)
  excludeMentions  Boolean          @default(false)
  excludeSensitive Boolean          @default(false)
  user             User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId           String
}

model BlueskySession {
  key    String @id
  userId String @unique @default(cuid())
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  value  Json
}
